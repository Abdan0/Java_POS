/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main;

/**
 *
 * @author abdan
 */
import config.Koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import list.listjenisbrg;
public class pn_brgtest extends javax.swing.JPanel {

    /**
     * Creates new form pn_brgtest
     */
    private Connection conn;
    public pn_brgtest() {
        initComponents();
        conn = Koneksi.getConnection();
        Statement st;
        ResultSet rs;
        getData();
    }
    
    public void inputData() {
        String sql = "INSERT INTO tbl_barang VALUES (?, ?, ?, ?, ?, ?)";
        try (PreparedStatement statement = Koneksi.getConnection().prepareStatement(sql)) {
            statement.setString(1, txtkdbrg.getText());
            statement.setString(2, txtkdjenis.getText());
            statement.setString(3, txtnamabrg.getText());
            statement.setString(4, (String) cbsat.getSelectedItem());
            statement.setString(5, txthrgbrg.getText());
            statement.setString(6, txtstok.getText());

            statement.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil dimasukkan");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    public void bersih() {
        txtkdbrg.setText("");
        txtkdjenis.setText("");
        txtnamabrg.setText("");
        cbsat.setSelectedItem("-None-");
        txthrgbrg.setText("");
        txtstok.setText("");
    }

    private void edit() {
        String sql = "UPDATE tbl_barang SET kode_barang=?, kode_jenis=?, nama_barang=?, satuan=?, harga=?, stok=? WHERE kd_barang=?";
        try (PreparedStatement statement = Koneksi.getConnection().prepareStatement(sql)) {
            statement.setString(1, txtkdbrg.getText());
            statement.setString(2, txtkdjenis.getText());
            statement.setString(3, txtnamabrg.getText());
            statement.setString(4, (String) cbsat.getSelectedItem());
            statement.setString(5, txthrgbrg.getText());
            statement.setString(6, txtstok.getText());
            statement.setString(7, txtkdbrg.getText());

            statement.executeUpdate();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_brgutama = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tmbhbrg = new javax.swing.JPanel();
        btn_simpan = new javax.swing.JButton();
        btnbatal1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtkdbrg = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtkdjenis = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtnamabrg = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbsat = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txthrgbrg = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtstok = new javax.swing.JTextField();
        btnup = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        databrg = new javax.swing.JPanel();
        btnhapus = new javax.swing.JButton();
        txtcari = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBarang = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(0, 0, 0)));
        setLayout(new java.awt.CardLayout());

        pn_brgutama.setBackground(new java.awt.Color(255, 255, 255));
        pn_brgutama.setLayout(new java.awt.CardLayout());

        tmbhbrg.setBackground(new java.awt.Color(255, 255, 255));
        tmbhbrg.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 0, new java.awt.Color(0, 0, 0)));

        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });

        btnbatal1.setText("Batal");
        btnbatal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbatal1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Kode Barang");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Kode Jenis");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Nama Barang");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Satuan");

        cbsat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--None--", "Dus", "Renceng", "Pack", "Pcs", " " }));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Harga Barang");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Stok");

        btnup.setText("Update");
        btnup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupActionPerformed(evt);
            }
        });

        jButton1.setText("--");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tmbhbrgLayout = new javax.swing.GroupLayout(tmbhbrg);
        tmbhbrg.setLayout(tmbhbrgLayout);
        tmbhbrgLayout.setHorizontalGroup(
            tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tmbhbrgLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tmbhbrgLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txthrgbrg, javax.swing.GroupLayout.PREFERRED_SIZE, 940, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tmbhbrgLayout.createSequentialGroup()
                        .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(tmbhbrgLayout.createSequentialGroup()
                                    .addComponent(btnup, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(26, 26, 26)
                                    .addComponent(btn_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnbatal1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtstok)
                                    .addComponent(cbsat, 0, 940, Short.MAX_VALUE)
                                    .addComponent(txtnamabrg)
                                    .addComponent(txtkdbrg)))
                            .addGroup(tmbhbrgLayout.createSequentialGroup()
                                .addComponent(txtkdjenis, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)))))
                .addGap(89, 89, 89))
        );
        tmbhbrgLayout.setVerticalGroup(
            tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tmbhbrgLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtkdbrg, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtkdjenis, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addGap(15, 15, 15)
                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtnamabrg, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbsat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txthrgbrg, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tmbhbrgLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(txtstok, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tmbhbrgLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)))
                .addGap(18, 18, 18)
                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnbatal1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(225, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tambah Barang", tmbhbrg);

        databrg.setBackground(new java.awt.Color(255, 255, 255));
        databrg.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 0, new java.awt.Color(0, 0, 0)));

        btnhapus.setText("Hapus");
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });

        txtcari.setForeground(new java.awt.Color(204, 204, 204));
        txtcari.setText("Pencarian");
        txtcari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtcariMouseClicked(evt);
            }
        });
        txtcari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcariKeyTyped(evt);
            }
        });

        tblBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Kode Barang", "Kode Jenis", "Nama Barang", "Satuan", "Harga", "Stok"
            }
        ));
        tblBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBarang);

        javax.swing.GroupLayout databrgLayout = new javax.swing.GroupLayout(databrg);
        databrg.setLayout(databrgLayout);
        databrgLayout.setHorizontalGroup(
            databrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databrgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(databrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(databrgLayout.createSequentialGroup()
                        .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnhapus)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        databrgLayout.setVerticalGroup(
            databrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databrgLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(databrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnhapus, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
        );

        jTabbedPane1.addTab("Data Barang", databrg);

        pn_brgutama.add(jTabbedPane1, "card2");

        add(pn_brgutama, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btnupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupActionPerformed
         int selectedRow = tblBarang.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih Baris Yang Akan Diperbarui");
            return;
        }

        String kd_brg = txtkdbrg.getText();
        String kd_jns = txtkdjenis.getText();
        String nma_brg = txtnamabrg.getText();
        String satuan = cbsat.getSelectedItem().toString();
        String hrg_brg = txthrgbrg.getText();
        String stok = txtstok.getText();

        if (kd_brg.isEmpty() || kd_jns.isEmpty() || nma_brg.isEmpty() || satuan.isEmpty() || hrg_brg.isEmpty() || stok.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua Kolom Harus Diisi", "VALIDASI", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            String sql = "UPDATE tbl_barang SET kode_barang=?, kode_jenis=?, nama_barang=?, satuan=?, harga=?, stok=? WHERE kode_barang=?";
            PreparedStatement st = conn.prepareStatement(sql);

            st.setString(1, kd_brg);
            st.setString(2, kd_jns);
            st.setString(3, nma_brg);
            st.setString(4, satuan);
            st.setString(5, hrg_brg);
            st.setString(6, stok);
            st.setString(7, kd_brg);

            int rowUpdate = st.executeUpdate();
            if (rowUpdate > 0) {
                JOptionPane.showMessageDialog(this, "Data Berhasil Diupdate");
                resetForm();
                getData();
            }

            st.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal melakukan pembaruan data: " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(pn_brgtest.class.getName()).log(Level.SEVERE, null, e);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Format angka tidak valid: " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(pn_brgtest.class.getName()).log(Level.SEVERE, null, e);
        }

        DefaultTableModel model = (DefaultTableModel) tblBarang.getModel();
        model.fireTableDataChanged();

    }//GEN-LAST:event_btnupActionPerformed

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
        int selectedRow = tblBarang.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Pilih Baris Yang Akan Dihapus");
            return;
        }
        
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda Yakin Ingin Menghapus Data Ini?", "KONFIRMASI", JOptionPane.YES_NO_OPTION);
        if(confirm ==  JOptionPane.YES_OPTION){
            String kd_brg = tblBarang.getValueAt(selectedRow, 0).toString();
            
            try {
                String sql = "DELETE FROM tbl_barang WHERE kode_barang=?";
                PreparedStatement st = conn.prepareStatement(sql);
                st.setString(1, kd_brg);
                
                int rowDelete = st.executeUpdate();
                if(rowDelete > 0){
                    JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                    resetForm();
                    getData();
                }
                
                st.close();
            } catch (Exception e) {
                Logger.getLogger(pn_brgtest.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }//GEN-LAST:event_btnhapusActionPerformed

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        String kd_brg = txtkdbrg.getText();
        String kd_jenis = txtkdjenis.getText();
        String nama_brg = txtnamabrg.getText();
        String satuan = cbsat.getSelectedItem().toString();

        String hrg_brg = txthrgbrg.getText();
        String stok = txtstok.getText();

        if(kd_brg.isEmpty() || kd_jenis.isEmpty()||nama_brg.isEmpty() || satuan.isEmpty() ||  hrg_brg.isEmpty() || stok.isEmpty() ){
            JOptionPane.showMessageDialog(this, "Semua Kolom Harus Diisi!!", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            String sql = "INSERT INTO tbl_barang (kode_barang, kode_jenis, nama_barang, satuan, harga, stok) VALUES(?,?,?,?,?,?)";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, kd_brg);
            st.setString(2, kd_jenis);
            st.setString(3, nama_brg);
            st.setString(4, satuan);
            st.setString(5, hrg_brg);
            st.setString(6, stok);

            int rowInserted = st.executeUpdate();
            if(rowInserted > 0){
                JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan");
                resetForm();
                getData();
            }

            st.close();
        } catch (Exception e) {
            Logger.getLogger(pn_brgtest.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_btn_simpanActionPerformed

    
    private void btnbatal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbatal1ActionPerformed
        txtkdbrg.setText("");
        txtkdjenis.setText("");
        txtnamabrg.setText("");
        cbsat.setSelectedIndex(0);
        txthrgbrg.setText("");
        txtstok.setText("");
    }//GEN-LAST:event_btnbatal1ActionPerformed

    private void txtcariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcariKeyTyped
        // TODO add your handling code here:
       DefaultTableModel model = (DefaultTableModel) tblBarang.getModel();
        model.setRowCount(0);
        
        String cari = txtcari.getText();
        
        
        try{
            String sql = "Select * From tbl_barang WHERE kode_barang LIKE ? OR kode_jenis LIKE ? OR nama_barang LIKE ?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1,"%" + cari + "%");
            st.setString(2,"%" + cari + "%");
            st.setString(3,"%" + cari + "%");
            ResultSet rs = st.executeQuery();
            
            while(rs.next()){
                String kd_brg = rs.getString("Kode_barang");
                String kd_jenis = rs.getString("kode_jenis");
                String nama_brg = rs.getString("nama_barang");
                String satuan = rs.getString("satuan");
                String harga = rs.getString("harga");
                String stok = rs.getString("stok");
                
                
                
                Object[] rowData = {kd_brg, kd_jenis, nama_brg, satuan, harga, stok};
                model.addRow(rowData);
            }
            
            rs.close();
            st.close();
            
        } catch (Exception e){
            Logger.getLogger(pn_brgtest.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_txtcariKeyTyped

    private void txtcariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtcariMouseClicked
        // TODO add your handling code here:
        txtcari.setText("");
    }//GEN-LAST:event_txtcariMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        new listjenisbrg().setVisible(true);
        new listjenisbrg().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBarangMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblBarang.getSelectedRow();
        if(selectedRow != -1){
            String kd_brg = tblBarang.getValueAt(selectedRow, 0).toString();
            String kd_jenis = tblBarang.getValueAt(selectedRow, 1).toString();
            String nama_brg = tblBarang.getValueAt(selectedRow, 2).toString();
            String satuan = tblBarang.getValueAt(selectedRow, 3).toString();
            String harga = tblBarang.getValueAt(selectedRow, 4).toString();
            String stok =tblBarang.getValueAt(selectedRow, 5).toString();
            

        
            txtkdbrg.setText(kd_brg);
            txtkdjenis.setText(kd_jenis);
            txtnamabrg.setText(nama_brg);
            txthrgbrg.setText(harga);
            cbsat.setSelectedItem(satuan);
            txtstok.setText(stok);
        }
    }//GEN-LAST:event_tblBarangMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_simpan;
    private javax.swing.JButton btnbatal1;
    private javax.swing.JButton btnhapus;
    private javax.swing.JButton btnup;
    private javax.swing.JComboBox<String> cbsat;
    private javax.swing.JPanel databrg;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pn_brgutama;
    private javax.swing.JTable tblBarang;
    private javax.swing.JPanel tmbhbrg;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txthrgbrg;
    private javax.swing.JTextField txtkdbrg;
    public javax.swing.JTextField txtkdjenis;
    private javax.swing.JTextField txtnamabrg;
    private javax.swing.JTextField txtstok;
    // End of variables declaration//GEN-END:variables

    private void getData() {
        DefaultTableModel model = (DefaultTableModel) tblBarang.getModel();
        model.setRowCount(0);
        
        try{
            String sql = "Select * From tbl_barang";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            
            while(rs.next()){
                String kd_brg = rs.getString("kode_barang");
                String kd_jenis = rs.getString("kode_jenis");
                String nama_brg = rs.getString("nama_barang");
                String harga = rs.getString("satuan");
                String satuan = rs.getString("harga");
                String stok = rs.getString("stok");
                
                
                
                Object[] rowData = {kd_brg, kd_jenis, nama_brg, harga, satuan, stok};
                model.addRow(rowData);
            }
            
            rs.close();
            st.close();
            
        } catch (Exception e){
            Logger.getLogger(pn_brgtest.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void resetForm() {
        txtkdbrg.setText("");
       txtkdjenis.setText("");
       txtnamabrg.setText("");
       txthrgbrg.setText("");
       cbsat.setSelectedIndex(0);
       txtstok.setText("");
    }
    
//    private void edit(){
//        try {
//            String sql = "UPDATE tbl_barang set kode_jenis='"+txtkdjenis+"'nama_barang='"+txtnamabrg.getText()+"',satuan='"+cbsat.getSelectedItem()+"',harga='"+txthrgbrg.getText()+"',stok='"+txtstok.getText()+"' WHERE kode_barang='"+txtkdbrg.getText()+"'";
//            PreparedStatement st = conn.prepareStatement(sql);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e);
//        }
//
//    }

//    private void load_data() {
//        
//    }

    public void setDefaultCloseOperation(int DISPOSE_ON_CLOSE) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }


}
