/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main;

/**
 *
 * @author abdan
 */
import config.Koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class pn_jnstest extends javax.swing.JPanel {

    /**
     * Creates new form pn_brgtest
     */
    private Connection conn;
    public pn_jnstest() {
        initComponents();
        conn = Koneksi.getConnection();
        getData();
//        AutoNumberJns();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tmbhbrg = new javax.swing.JPanel();
        txtkdjenis = new javax.swing.JTextField();
        txtnamajns = new javax.swing.JTextField();
        btn_simpan = new javax.swing.JButton();
        btnbatal1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btn_up = new javax.swing.JButton();
        datajns = new javax.swing.JPanel();
        btnhapus = new javax.swing.JButton();
        txtcari = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbljenis = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(0, 0, 0)));
        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.CardLayout());

        tmbhbrg.setBackground(new java.awt.Color(255, 255, 255));
        tmbhbrg.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 0, new java.awt.Color(0, 0, 0)));

        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });

        btnbatal1.setText("Batal");
        btnbatal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbatal1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Kode Jenis");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Nama Jenis");

        btn_up.setText("Update");
        btn_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_upActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tmbhbrgLayout = new javax.swing.GroupLayout(tmbhbrg);
        tmbhbrg.setLayout(tmbhbrgLayout);
        tmbhbrgLayout.setHorizontalGroup(
            tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tmbhbrgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tmbhbrgLayout.createSequentialGroup()
                        .addComponent(btn_simpan)
                        .addGap(18, 18, 18)
                        .addComponent(btn_up)
                        .addGap(18, 18, 18)
                        .addComponent(btnbatal1))
                    .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(tmbhbrgLayout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(18, 18, 18)
                            .addComponent(txtkdjenis))
                        .addGroup(tmbhbrgLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtnamajns, javax.swing.GroupLayout.PREFERRED_SIZE, 1009, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        tmbhbrgLayout.setVerticalGroup(
            tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tmbhbrgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtkdjenis, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtnamajns, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tmbhbrgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnbatal1, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(btn_up, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_simpan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(456, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tambah Jenis", tmbhbrg);

        datajns.setBackground(new java.awt.Color(255, 255, 255));
        datajns.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 0, new java.awt.Color(0, 0, 0)));

        btnhapus.setText("Hapus");
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });

        txtcari.setText("Pencarian");
        txtcari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtcariMouseClicked(evt);
            }
        });
        txtcari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcariKeyTyped(evt);
            }
        });

        tbljenis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Kode Jenis", "Nama Jenis"
            }
        ));
        tbljenis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbljenisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbljenis);

        javax.swing.GroupLayout datajnsLayout = new javax.swing.GroupLayout(datajns);
        datajns.setLayout(datajnsLayout);
        datajnsLayout.setHorizontalGroup(
            datajnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datajnsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datajnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(datajnsLayout.createSequentialGroup()
                        .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnhapus)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        datajnsLayout.setVerticalGroup(
            datajnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datajnsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datajnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnhapus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Data Jenis", datajns);

        jPanel1.add(jTabbedPane1, "card2");

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbljenis.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Pilih Baris Yang Akan Dihapus");
            return;
        }
        
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda Yakin Ingin Menghapus Data Ini?", "KONFIRMASI", JOptionPane.YES_NO_OPTION);
        if(confirm ==  JOptionPane.YES_OPTION){
            String id_dis = tbljenis.getValueAt(selectedRow, 0).toString();
            
            try {
                String sql = "DELETE FROM tbl_jenisbarang WHERE kode_jenis=?";
                PreparedStatement st = conn.prepareStatement(sql);
                st.setString(1, id_dis);
                
                int rowDelete = st.executeUpdate();
                if(rowDelete > 0){
                    JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                    resetForm();
                    getData();
                }
                
                st.close();
            } catch (Exception e) {
                Logger.getLogger(pn_jnstest.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }//GEN-LAST:event_btnhapusActionPerformed

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        String kd_jenis = txtkdjenis.getText();
        String nama_jenis = txtnamajns.getText();

        if(kd_jenis.isEmpty()||nama_jenis.isEmpty()){
            JOptionPane.showMessageDialog(this, "Semua Kolom Harus Diisi!!", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            String sql = "INSERT INTO tbl_jenisbarang (kode_jenis, nama_jenis) VALUES(?,?)";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, kd_jenis);
            st.setString(2, nama_jenis);

            int rowInserted = st.executeUpdate();
            if(rowInserted > 0){
                JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan");

                resetForm();
                getData();
            }

            st.close();
        } catch (Exception e) {
            Logger.getLogger(pn_jnstest.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_btn_simpanActionPerformed

    private void btnbatal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbatal1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnbatal1ActionPerformed

    private void btn_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_upActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbljenis.getSelectedRow();

if (selectedRow == -1) {
    JOptionPane.showMessageDialog(this, "Pilih Baris Yang Akan Diperbarui");
    return;
}

String kd_jenis = txtkdjenis.getText();
String nama_jns = txtnamajns.getText();


if (kd_jenis.isEmpty() || nama_jns.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Semua Kolom Harus Diisi", "VALIDASI", JOptionPane.ERROR_MESSAGE);
    return;
}

try {
    String sql = "UPDATE tbl_jenisbarang SET kode_jenis=?, nama_jenis=? WHERE kode_jenis=?";
    PreparedStatement st = conn.prepareStatement(sql);

    st.setString(1, kd_jenis);
    st.setString(2, nama_jns);
    st.setString(3, kd_jenis);

    int rowUpdate = st.executeUpdate();
    if (rowUpdate > 0) {
        JOptionPane.showMessageDialog(this, "Data Berhasil Diupdate");
        resetForm();
        getData();
    }

    st.close();

} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Gagal melakukan pembaruan data: " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
    Logger.getLogger(brngmsk.class.getName()).log(Level.SEVERE, null, e);
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Format angka tidak valid: " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
    Logger.getLogger(brngmsk.class.getName()).log(Level.SEVERE, null, e);
}

DefaultTableModel model = (DefaultTableModel) tbljenis.getModel();
model.fireTableDataChanged();

    }//GEN-LAST:event_btn_upActionPerformed

    private void txtcariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcariKeyTyped
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbljenis.getModel();
        model.setRowCount(0);
        
        String cari = txtcari.getText();
        
        
        try{
            String sql = "Select * From tbl_jenisbarang WHERE kode_jenis LIKE ? OR nama_jenis LIKE ?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1,"%" + cari + "%");
            st.setString(2,"%" + cari + "%");
            ResultSet rs = st.executeQuery();
            
            while(rs.next()){
                String kd_jenis = rs.getString("kode_jenis");
                String nama_jenis = rs.getString("nama_jenis");
                
                
                
                Object[] rowData = {kd_jenis, nama_jenis};
                model.addRow(rowData);
            }
            
            rs.close();
            st.close();
            
        } catch (Exception e){
            Logger.getLogger(pn_brgtest.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_txtcariKeyTyped

    private void txtcariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtcariMouseClicked
        // TODO add your handling code here:
        txtcari.setText("");
    }//GEN-LAST:event_txtcariMouseClicked

    private void tbljenisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbljenisMouseClicked
        // TODO add your handling code here:
        int selectedRow = tbljenis.getSelectedRow();
        if(selectedRow != -1){
            String kd_jenis = tbljenis.getValueAt(selectedRow, 0).toString();
            String nama_jenis = tbljenis.getValueAt(selectedRow, 1).toString();
        
            txtkdjenis.setText(kd_jenis);
            txtnamajns.setText(nama_jenis);
        }
    }//GEN-LAST:event_tbljenisMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_simpan;
    private javax.swing.JButton btn_up;
    private javax.swing.JButton btnbatal1;
    private javax.swing.JButton btnhapus;
    private javax.swing.JPanel datajns;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tbljenis;
    private javax.swing.JPanel tmbhbrg;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txtkdjenis;
    private javax.swing.JTextField txtnamajns;
    // End of variables declaration//GEN-END:variables

    private void getData() {
        DefaultTableModel model = (DefaultTableModel) tbljenis.getModel();
        model.setRowCount(0);
        
        try{
            String sql = "Select * From tbl_jenisbarang";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            
            while(rs.next()){
                String kd_jenis = rs.getString("kode_jenis");
                String nama_jns = rs.getString("nama_jenis");
                
                
                
                Object[] rowData = {kd_jenis, nama_jns};
                model.addRow(rowData);
            }
            
            rs.close();
            st.close();
            
        } catch (Exception e){
            Logger.getLogger(pn_jnstest.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void resetForm() {
       txtkdjenis.setText("");
       txtnamajns.setText("");
    }
    
    private void AutoNumberJns(){
        txtkdjenis.setEditable(false);

        
        try {
            String sql = "SELECT MAX(RIGHT(kode_jenis, 4)) AS no_auto FROM tbl_jenisbarang";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            
            st = (PreparedStatement) conn.createStatement();
            rs = st.executeQuery(sql);
            
            if(rs.next()){
                String no_auto, nol_plus;
                int p;
                no_auto = Integer.toString(rs.getInt(1)+1);
                p = no_auto.length();
                nol_plus = "";
                for(int i=1;i<=4-p;i++){
                    nol_plus = nol_plus + "0";
                }
                
                txtkdjenis.setText("J" + nol_plus + no_auto);
            }
        } catch (Exception e) {
            txtkdjenis.setText("J0001");
        }
    }
}
