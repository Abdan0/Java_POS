/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import config.Koneksi;
import form.login;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author abdan
 */
public class dashbord extends javax.swing.JFrame {

    /**
     * Creates new form dashbord
     */
    public dashbord() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_sidebar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pn_menus = new javax.swing.JPanel();
        pn_navbar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pn_content = new javax.swing.JPanel();
        pn_utama = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pn_sidebar.setBackground(new java.awt.Color(255, 255, 255));
        pn_sidebar.setPreferredSize(new java.awt.Dimension(200, 472));

        jScrollPane1.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        pn_menus.setBackground(new java.awt.Color(255, 255, 255));
        pn_menus.setLayout(new javax.swing.BoxLayout(pn_menus, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(pn_menus);

        javax.swing.GroupLayout pn_sidebarLayout = new javax.swing.GroupLayout(pn_sidebar);
        pn_sidebar.setLayout(pn_sidebarLayout);
        pn_sidebarLayout.setHorizontalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );
        pn_sidebarLayout.setVerticalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
        );

        getContentPane().add(pn_sidebar, java.awt.BorderLayout.LINE_START);

        pn_navbar.setBackground(new java.awt.Color(153, 51, 0));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Gambar_WhatsApp_2023-12-18_pukul_16.23.20_ec9bfb60-removebg-preview.png"))); // NOI18N

        javax.swing.GroupLayout pn_navbarLayout = new javax.swing.GroupLayout(pn_navbar);
        pn_navbar.setLayout(pn_navbarLayout);
        pn_navbarLayout.setHorizontalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_navbarLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addContainerGap(919, Short.MAX_VALUE))
        );
        pn_navbarLayout.setVerticalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_navbarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(22, 22, 22))
        );

        getContentPane().add(pn_navbar, java.awt.BorderLayout.PAGE_START);

        pn_utama.setBackground(new java.awt.Color(255, 255, 255));
        pn_utama.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pn_contentLayout = new javax.swing.GroupLayout(pn_content);
        pn_content.setLayout(pn_contentLayout);
        pn_contentLayout.setHorizontalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        pn_contentLayout.setVerticalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
        );

        getContentPane().add(pn_content, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1012, 631));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        pn_utama.add(new content_bg());
        pn_utama.repaint();
        pn_utama.revalidate();
        
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dashbord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dashbord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dashbord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dashbord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dashbord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pn_content;
    private javax.swing.JPanel pn_menus;
    private javax.swing.JPanel pn_navbar;
    private javax.swing.JPanel pn_sidebar;
    private javax.swing.JPanel pn_utama;
    // End of variables declaration//GEN-END:variables

    private void execute() {
        ImageIcon iconMaster    = new ImageIcon(getClass().getResource("/img/Folder.png"));
        ImageIcon iconBarang    = new ImageIcon(getClass().getResource("/img/Opened Folder.png"));
        ImageIcon iconLogout    = new ImageIcon(getClass().getResource("/img/Logout.png"));
        ImageIcon iconTransaksi    = new ImageIcon(getClass().getResource("/img/sales.png"));
        ImageIcon iconReport    = new ImageIcon(getClass().getResource("/img/Report.png"));
        ImageIcon iconHome    = new ImageIcon(getClass().getResource("/img/Home_1.png"));
        
        
        //submenu barang
        menuitems databarang     = new menuitems(null, true, iconBarang, "Jenis Barang", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new pn_jnstest());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuitems jenisbarang     = new menuitems(null, true, iconBarang, "Data Barang", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new pn_brgtest());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuitems distributor     = new menuitems(null, true, iconBarang, "Distributor", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new pn_distributor());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuitems pengguna     = new menuitems(null, true, iconBarang, "Pengguna", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new pn_user());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        
        //submenu transaksi
        menuitems pemesanan   = new menuitems(null, true, iconBarang, "Pemesanan", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new pn_pesanbrg3());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuitems brgmasuk  = new menuitems(null, true, iconBarang, "Barang Masuk", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new brngmsk());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuitems brgkeluar  = new menuitems(null, true, iconBarang, "Barang Keluar", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new brngklr());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        
        //menu
        menuitems menuHome     = new menuitems(iconHome, false, null, "Home", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new content_bg());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuitems menuMaster     = new menuitems(iconMaster, false, null, "Master", null, databarang, jenisbarang, distributor, pengguna);
        menuitems menuTransaksi  = new menuitems(iconTransaksi, false, null, "Transaksi", null, pemesanan, brgmasuk, brgkeluar);
        menuitems menuReport     = new menuitems(iconReport, false, null, "Report", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new laporan());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuitems menuLogout     = new menuitems(iconLogout, false, null, "LogOut", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new login().setVisible(true);
                setVisible(false);

            }
        });
        
        addMenu (menuHome, menuMaster, menuTransaksi, menuReport, menuLogout);
    }
    
    private void addMenu(menuitems... menu){
        for(int i = 0; i < menu.length; i++){
            pn_menus.add(menu[i]);
            ArrayList<menuitems> subMenu = menu[i].getSubMenu();
            for (menuitems m : subMenu){
                addMenu(m);
            }
        }
        pn_menus.revalidate();
    }
}
