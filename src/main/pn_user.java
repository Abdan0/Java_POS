/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main;

/**
 *
 * @author abdan
 */
import config.Koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class pn_user extends javax.swing.JPanel {

    /**
     * Creates new form pn_brgtest
     */
    private Connection conn;
    public pn_user() {
        initComponents();
        conn = Koneksi.getConnection();
        getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tmbhdis = new javax.swing.JPanel();
        txtiduser = new javax.swing.JTextField();
        txtnamauser = new javax.swing.JTextField();
        btn_simpan = new javax.swing.JButton();
        btnbatal1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtusername = new javax.swing.JTextField();
        txtpass = new javax.swing.JTextField();
        txttelp = new javax.swing.JTextField();
        txtalmt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnup = new javax.swing.JButton();
        dataDis = new javax.swing.JPanel();
        btnhapus = new javax.swing.JButton();
        txtcari = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbluser = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(0, 0, 0)));
        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.CardLayout());

        tmbhdis.setBackground(new java.awt.Color(255, 255, 255));
        tmbhdis.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 0, new java.awt.Color(0, 0, 0)));

        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });

        btnbatal1.setText("Batal");
        btnbatal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbatal1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("ID Pengguna");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Nama Pengguna");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Username");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Password");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Telepon");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Alamat");

        btnup.setText("Update");
        btnup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tmbhdisLayout = new javax.swing.GroupLayout(tmbhdis);
        tmbhdis.setLayout(tmbhdisLayout);
        tmbhdisLayout.setHorizontalGroup(
            tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tmbhdisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tmbhdisLayout.createSequentialGroup()
                        .addGroup(tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtnamauser, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)
                            .addComponent(txtusername, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)
                            .addComponent(txtpass, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)
                            .addComponent(txtiduser)
                            .addComponent(txttelp, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)
                            .addComponent(txtalmt, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)))
                    .addGroup(tmbhdisLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnup)
                        .addGap(35, 35, 35)
                        .addComponent(btn_simpan)
                        .addGap(25, 25, 25)
                        .addComponent(btnbatal1)))
                .addGap(16, 16, 16))
        );
        tmbhdisLayout.setVerticalGroup(
            tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tmbhdisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtiduser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(15, 15, 15)
                .addGroup(tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtnamauser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(15, 15, 15)
                .addGroup(tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpass, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(15, 15, 15)
                .addGroup(tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txttelp, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtalmt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tmbhdisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnup, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                    .addComponent(btnbatal1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(266, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tambah Pengguna", tmbhdis);

        dataDis.setBackground(new java.awt.Color(255, 255, 255));
        dataDis.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 0, new java.awt.Color(0, 0, 0)));

        btnhapus.setText("Hapus");
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });

        txtcari.setText("Pencarian");
        txtcari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtcariMouseClicked(evt);
            }
        });
        txtcari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcariKeyTyped(evt);
            }
        });

        tbluser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Pengguna", "Nama Pengguna", "Username", "Password", "Telpon", "Alamat"
            }
        ));
        tbluser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbluserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbluser);

        javax.swing.GroupLayout dataDisLayout = new javax.swing.GroupLayout(dataDis);
        dataDis.setLayout(dataDisLayout);
        dataDisLayout.setHorizontalGroup(
            dataDisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataDisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dataDisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dataDisLayout.createSequentialGroup()
                        .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnhapus)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        dataDisLayout.setVerticalGroup(
            dataDisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataDisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dataDisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnhapus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Data Pengguna", dataDis);

        jPanel1.add(jTabbedPane1, "card2");

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbluser.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Pilih Baris Yang Akan Dihapus");
            return;
        }
        
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda Yakin Ingin Menghapus Data Ini?", "KONFIRMASI", JOptionPane.YES_NO_OPTION);
        if(confirm ==  JOptionPane.YES_OPTION){
            String id_user = tbluser.getValueAt(selectedRow, 0).toString();
            
            try {
                String sql = "DELETE FROM tbl_pengguna WHERE id_pengguna=?";
                PreparedStatement st = conn.prepareStatement(sql);
                st.setString(1, id_user);
                
                int rowDelete = st.executeUpdate();
                if(rowDelete > 0){
                    JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                    resetForm();
                    getData();
                }
                
                st.close();
            } catch (Exception e) {
                Logger.getLogger(pn_user.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }//GEN-LAST:event_btnhapusActionPerformed

    private void btnupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbluser.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih Baris Yang Akan Diperbarui");
            return;
        }

        String id_user = txtiduser.getText();
        String nama_user = txtnamauser.getText();
        String user = txtusername.getText();
        String pass = txtpass.getText();
        String telp = txttelp.getText();
        String alamat = txtalmt.getText();

        if (id_user.isEmpty() || nama_user.isEmpty() || user.isEmpty() || pass.isEmpty() || telp.isEmpty() || alamat.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua Kolom Harus Diisi", "VALIDASI", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            String sql = "UPDATE tbl_pengguna SET id_pengguna=?, nama_pengguna=?, username=?, password=?, telp_pengguna=?, alamat_pengguna=? WHERE id_pengguna=?";
            PreparedStatement st = conn.prepareStatement(sql);

            st.setString(1, id_user);
            st.setString(2, nama_user);
            st.setString(3, user);
            st.setString(4, pass);
            st.setString(5, telp);
            st.setString(6, alamat);
            st.setString(7, id_user);

            int rowUpdate = st.executeUpdate();
            if (rowUpdate > 0) {
                JOptionPane.showMessageDialog(this, "Data Berhasil Diupdate");
                resetForm();
                getData();
            }

            st.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal melakukan pembaruan data: " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(pn_user.class.getName()).log(Level.SEVERE, null, e);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Format angka tidak valid: " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(pn_user.class.getName()).log(Level.SEVERE, null, e);
        }

        DefaultTableModel model = (DefaultTableModel) tbluser.getModel();
        model.fireTableDataChanged();
    }//GEN-LAST:event_btnupActionPerformed

    private void btnbatal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbatal1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnbatal1ActionPerformed

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        String id_user = txtiduser.getText();
        String nama_user = txtnamauser.getText();
        String user = txtusername.getText();
        String pass = txtpass.getText();
        String telp = txttelp.getText();
        String alamat = txtalmt.getText();

        if(id_user.isEmpty()||nama_user.isEmpty() ||user.isEmpty() ||pass.isEmpty() ||telp.isEmpty() ||alamat.isEmpty()){
            JOptionPane.showMessageDialog(this, "Semua Kolom Harus Diisi!!", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            String sql = "INSERT INTO tbl_pengguna (id_pengguna, nama_pengguna, username, password, telp_pengguna, alamat_pengguna) VALUES(?,?,?,?,?,?)";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, id_user);
            st.setString(2, nama_user);
            st.setString(3, user);
            st.setString(4, pass);
            st.setString(5, telp);
            st.setString(6, alamat);

            int rowInserted = st.executeUpdate();
            if(rowInserted > 0){
                JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan");

                resetForm();
                getData();
            }

            st.close();
        } catch (Exception e) {
            Logger.getLogger(pn_user.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_btn_simpanActionPerformed

    private void txtcariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtcariMouseClicked
        // TODO add your handling code here:
        txtcari.setText("");
    }//GEN-LAST:event_txtcariMouseClicked

    private void txtcariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcariKeyTyped
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbluser.getModel();
        model.setRowCount(0);
        
        String cari = txtcari.getText();
        
        
        try{
            String sql = "Select * From tbl_pengguna WHERE id_pengguna LIKE ? OR nama_pengguna LIKE ?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1,"%" + cari + "%");
            st.setString(2,"%" + cari + "%");
            ResultSet rs = st.executeQuery();
            
            while(rs.next()){
                String id_user = rs.getString("id_pengguna");
                String nama_user = rs.getString("nama_pengguna");
                String user = rs.getString("username");
                String pass = rs.getString("password");
                String telp = rs.getString("telp_pengguna");
                String alamat = rs.getString("alamat_pengguna");
                
                
                
                Object[] rowData = {id_user, nama_user, user, pass, telp, alamat};
                model.addRow(rowData);
            }
            
            rs.close();
            st.close();
            
        } catch (Exception e){
            Logger.getLogger(pn_user.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_txtcariKeyTyped

    private void tbluserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbluserMouseClicked
        // TODO add your handling code here:
        int selectedRow = tbluser.getSelectedRow();
        if(selectedRow != -1){
            String id_user = tbluser.getValueAt(selectedRow, 0).toString();
            String nama_user = tbluser.getValueAt(selectedRow, 1).toString();
            String user = tbluser.getValueAt(selectedRow, 2).toString();
            String pass = tbluser.getValueAt(selectedRow, 3).toString();
            String telp = tbluser.getValueAt(selectedRow, 4).toString();
            String alamat = tbluser.getValueAt(selectedRow, 5).toString();
        
            txtiduser.setText(id_user);
            txtnamauser.setText(nama_user);
            txtusername.setText(user);
            txtpass.setText(pass);
            txttelp.setText(telp);
            txtalmt.setText(alamat);
        }
    }//GEN-LAST:event_tbluserMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_simpan;
    private javax.swing.JButton btnbatal1;
    private javax.swing.JButton btnhapus;
    private javax.swing.JButton btnup;
    private javax.swing.JPanel dataDis;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tbluser;
    private javax.swing.JPanel tmbhdis;
    private javax.swing.JTextField txtalmt;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txtiduser;
    private javax.swing.JTextField txtnamauser;
    private javax.swing.JTextField txtpass;
    private javax.swing.JTextField txttelp;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables

    private void getData() {
        DefaultTableModel model = (DefaultTableModel) tbluser.getModel();
        model.setRowCount(0);
        
        try{
            String sql = "Select * From tbl_pengguna";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            
            while(rs.next()){
                String id_user = rs.getString("id_pengguna");
                String nama_user = rs.getString("nama_pengguna");
                String username = rs.getString("username");
                String pass = rs.getString("password");
                String telp = rs.getString("telp_pengguna");
                String alamat = rs.getString("alamat_pengguna");
                
                
                
                Object[] rowData = {id_user, nama_user, username, pass, telp, alamat};
                model.addRow(rowData);
            }
            
            rs.close();
            st.close();
            
        } catch (Exception e){
            Logger.getLogger(pn_user.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void resetForm() {
       txtiduser.setText("");
       txtnamauser.setText("");
       txtusername.setText("");
       txtpass.setText("");
       txttelp.setText("");
       txtalmt.setText("");
    }
}
